# # Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# # More GitHub Actions for Azure: https://github.com/Azure/actions
# # More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

# name: Build and deploy Python app to Azure Web App - azure-deploy-test

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read #This is required for actions/checkout

#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Python version
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.11'

#       - name: Create and start virtual environment
#         run: |
#           python -m venv venv
#           source venv/bin/activate
      
#       - name: Install dependencies
#         run: pip install -r requirements.txt
        
#       # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

#       - name: Upload artifact for deployment jobs
#         uses: actions/upload-artifact@v4
#         with:
#           name: python-app
#           path: |
#             .
#             !venv/

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
    
#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v4
#         with:
#           name: python-app
      
#       - name: 'Deploy to Azure Web App'
#         uses: azure/webapps-deploy@v3
#         id: deploy-to-webapp
#         with:
#           app-name: 'azure-deploy-test'
#           slot-name: 'Production'
#           publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_5BA560F871F549D191D132383C1E3CE3 }}
name: Build and Deploy FastAPI to Azure Web App - azure-deploy-test

on:
  push:
    branches:
      - main  # Deploy when pushing to main branch
  workflow_dispatch:  # Allow manual deployment

env:
  AZURE_WEBAPP_NAME: 'azure-deploy-test'  # ✅ Replaced
  PYTHON_VERSION: '3.11'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read  # Required for actions/checkout

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.5
        virtualenvs-create: true
        virtualenvs-in-project: true
        virtualenvs-path: .venv
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-dev

    - name: Make startup script executable
      run: chmod +x startup.sh

    - name: Run tests (optional)
      run: |
        # Uncomment if you have tests
        # poetry run pytest

    - name: Create deployment package
      run: |
        mkdir -p deployment
            # Copy application files (only if they exist)
        cp -r app deployment/ 2>/dev/null || echo "No app directory found"
        cp startup.sh deployment/ 2>/dev/null || echo "No startup.sh found"
        cp pyproject.toml deployment/ 2>/dev/null || echo "No pyproject.toml found"
        cp poetry.lock deployment/ 2>/dev/null || echo "No poetry.lock found"
        
        # Copy virtual environment
        cp -r .venv deployment/ 2>/dev/null || echo "No .venv found"
        
        # Copy README if it exists
        [ -f README.md ] && cp README.md deployment/ || echo "No README.md found, skipping"
        
        # Create zip file
        cd deployment
        zip -r ../release.zip . -x "*.git*" "*.pytest_cache*" "*__pycache__*"

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      id: deploy-to-webapp
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}                   # ✅ From old version
        slot-name: 'Production'                                  # ✅ From old version
        publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_5BA560F871F549D191D132383C1E3CE3 }}  # ✅ From old version
        package: release.zip
