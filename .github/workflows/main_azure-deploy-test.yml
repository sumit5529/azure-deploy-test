# # Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# # More GitHub Actions for Azure: https://github.com/Azure/actions
# # More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

# name: Build and deploy Python app to Azure Web App - azure-deploy-test

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read #This is required for actions/checkout

#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Python version
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.11'

#       - name: Create and start virtual environment
#         run: |
#           python -m venv venv
#           source venv/bin/activate
      
#       - name: Install dependencies
#         run: pip install -r requirements.txt
        
#       # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

#       - name: Upload artifact for deployment jobs
#         uses: actions/upload-artifact@v4
#         with:
#           name: python-app
#           path: |
#             .
#             !venv/

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
    
#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v4
#         with:
#           name: python-app
      
#       - name: 'Deploy to Azure Web App'
#         uses: azure/webapps-deploy@v3
#         id: deploy-to-webapp
#         with:
#           app-name: 'azure-deploy-test'
#           slot-name: 'Production'
#           publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_5BA560F871F549D191D132383C1E3CE3 }}
# name: Build and Deploy FastAPI to Azure Web App - azure-deploy-test

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Check for direct push
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            if [[ "$COMMIT_MESSAGE" =~ "Merge pull request" ]]; then
              echo "This is a merge from a PR. OK."
            else
              echo "::error::Direct pushes to main are not allowed."
              exit 1
            fi
          fi

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.5
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --no-root

      - name: Make startup script executable
        run: chmod +x startup.sh

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'azure-deploy-test'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_5BA560F871F549D191D132383C1E3CE3 }}
